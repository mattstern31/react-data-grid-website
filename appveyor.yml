version: 1.0.{build}
# Fix line endings in Windows. (runs before repo cloning)
init:
  - git config --global core.autocrlf input
environment:
  COVERALLS_REPO_TOKEN: 9RRu36GLfbnk5Ri6Y6FpoZU10CW6dlIfy
  COVERALLS_SERVICE_NAME: appveyor
  COVERALLS_GIT_COMMIT: $(APPVEYOR_REPO_COMMIT)
  COVERALLS_GIT_BRANCH : $(APPVEYOR_REPO_BRANCH)
  COVERALLS_SERVICE_JOB_ID  : $(APPVEYOR_BUILD_ID)
  COVERALLS_SERVICE_PULL_REQUEST : $(APPVEYOR_PULL_REQUEST_NUMBER)
  access_token:
    secure: dHfUgllfTEAqpcoz3iQj8TO0DGh8n90Coqf0+IXT0bIRNSIxGTDu991X+FStY613
  npmrc_token:
    secure: kGPlcVTOCUp5QVkRPDUGHg==


# Install scripts. (runs after repo cloning)
install:
  # Decrypt .npmrc.enc file for publishing purposes if not pull request build and not scheduled build
  - ps: >-
      if($env:APPVEYOR_REPO_BRANCH -ne 'master'){
        ./ci/publish/decrypt-npmrc.ps1
      }
      if(!$env:APPVEYOR_SCHEDULED_BUILD -and !$env:appveyor_pull_request_number -and $env:APPVEYOR_REPO_BRANCH -eq 'master') {
        ./ci/publish/decrypt-npmrc.ps1
      }
  - ps: Install-Product node 5
  - npm cache clean
  - set PATH=%APPDATA%\npm;%PATH%
  - npm install -g gulp
  - npm install
  - gulp flow
  - gulp dist
  - gulp examples

# Post-install test scripts.
test_script:
  # Output useful info for debugging.
  - node --version
  - npm --version
  # run tests
  - gulp test --release true
  - ps: ./test/uploadResults.ps1
  - gulp coveralls


# Don't run MS build step
build: off

cache:
  - '%AppData%\npm-cache -> package.json'

on_success:
- ps: >-
    if(!$env:APPVEYOR_SCHEDULED_BUILD -and !$env:appveyor_pull_request_number -and $env:APPVEYOR_REPO_BRANCH -eq 'master') {
      ./ci/publish/publishMaster.ps1
    }